/**************************************************************************************************
 GRADLE CONFIG
 *************************************************************************************************/

if ((new File(gradle.local)).exists()) {
    apply from: gradle.local
} else {
    apply from: gradle.remote
}

applicationScripts.each {
    apply from: it
}

apply plugin: 'com.android.application'

com.android.ddmlib.DdmPreferences.setTimeOut(60000)

android {
    // The following are set in the common.gradle file
    compileSdkVersion(compileVersion)
    buildToolsVersion(buildTools)

    defaultConfig {
        applicationId("org.odk.collect.android")
        minSdkVersion(9)
        targetSdkVersion(21)
        versionCode(1061)
        versionName("1.4.10")
    }

    productFlavors {
        demo {
        }

        master {
        }

        snapshot {
        }

        uitest {
        }
    }

    signingConfigs {
        release {
            if (shouldSign) {
                storeFile file(signStoreFilePath)
                storePassword signStorePass
                keyAlias signKeyAlias
                keyPassword signKeyPass
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled(minify)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            if (shouldSign) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable(true)
            testCoverageEnabled(testCoverage) // Allows AndroidTest JaCoCo reports to be generated
        }
    }

    packagingOptions { // Pick first occurrence of any files that cause conflicts, as defined in common.gradle
        packageList.each {
            pickFirst it
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
    transitive = true
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.google.android.gms:play-services:4.1.32'

    compile 'com.thoughtworks.xstream:xstream:1.4.8'

    // Testing-only dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
    testCompile('com.squareup.assertj:assertj-android:1.1.1') {
        exclude module: 'support-annotations'
    }
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.robolectric:robolectric:3.1'
}